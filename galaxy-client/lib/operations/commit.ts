/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/commitMappers";
import * as Parameters from "../models/parameters";
import { GalaxyApiContext } from "../galaxyApiContext";

/** Class representing a Commit. */
export class Commit {
  private readonly client: GalaxyApiContext;

  /**
   * Create a Commit.
   * @param {GalaxyApiContext} client Reference to the service client.
   */
  constructor(client: GalaxyApiContext) {
    this.client = client;
  }

  /**
   * @summary Commit a basket and return a job Id. Use /api/basket/commit/status/{id} to check the
   * status. The id is the result of this method.
   * @param basketId The basket identifier.
   * @param [options] The optional parameters
   * @returns Promise<Models.CommitCommitBasketResponse>
   */
  commitBasket(basketId: number, options?: msRest.RequestOptionsBase): Promise<Models.CommitCommitBasketResponse>;
  /**
   * @param basketId The basket identifier.
   * @param callback The callback
   */
  commitBasket(basketId: number, callback: msRest.ServiceCallback<number>): void;
  /**
   * @param basketId The basket identifier.
   * @param options The optional parameters
   * @param callback The callback
   */
  commitBasket(basketId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<number>): void;
  commitBasket(basketId: number, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<number>, callback?: msRest.ServiceCallback<number>): Promise<Models.CommitCommitBasketResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        options
      },
      commitBasketOperationSpec,
      callback) as Promise<Models.CommitCommitBasketResponse>;
  }

  /**
   * @summary Queries the status of a specific commit.
   * When the job has reached Ok status, you can use the reservation version id to get the
   * confirmation.
   * If the job got to failed, you will need to correct the contents of the basket and
   * commit the basket again using /api/basket/commit/{basketId}
   * @param id The commit job id.
   * @param [options] The optional parameters
   * @returns Promise<Models.CommitQueryCommitStatusResponse>
   */
  queryCommitStatus(id: number, options?: msRest.RequestOptionsBase): Promise<Models.CommitQueryCommitStatusResponse>;
  /**
   * @param id The commit job id.
   * @param callback The callback
   */
  queryCommitStatus(id: number, callback: msRest.ServiceCallback<Models.GalaxyApiModelsCommitCommitJobStatus>): void;
  /**
   * @param id The commit job id.
   * @param options The optional parameters
   * @param callback The callback
   */
  queryCommitStatus(id: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsCommitCommitJobStatus>): void;
  queryCommitStatus(id: number, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsCommitCommitJobStatus>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsCommitCommitJobStatus>): Promise<Models.CommitQueryCommitStatusResponse> {
    return this.client.sendOperationRequest(
      {
        id,
        options
      },
      queryCommitStatusOperationSpec,
      callback) as Promise<Models.CommitQueryCommitStatusResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const commitBasketOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/basket/commit/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Number"
        }
      }
    },
    default: {}
  },
  serializer
};

const queryCommitStatusOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "v3/api/basket/commit/status/{id}",
  urlParameters: [
    Parameters.id
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GalaxyApiModelsCommitCommitJobStatus
    },
    default: {}
  },
  serializer
};
