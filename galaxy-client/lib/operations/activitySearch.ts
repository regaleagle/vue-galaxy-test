/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/activitySearchMappers";
import * as Parameters from "../models/parameters";
import { GalaxyApiContext } from "../galaxyApiContext";

/** Class representing a ActivitySearch. */
export class ActivitySearch {
  private readonly client: GalaxyApiContext;

  /**
   * Create a ActivitySearch.
   * @param {GalaxyApiContext} client Reference to the service client.
   */
  constructor(client: GalaxyApiContext) {
    this.client = client;
  }

  /**
   * @param searchParameter
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param [options] The optional parameters
   * @returns Promise<Models.ActivitySearchSearchResponse>
   */
  search(searchParameter: Models.GalaxyApiModelsAvailabilityActivityActivitySearchFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase): Promise<Models.ActivitySearchSearchResponse>;
  /**
   * @param searchParameter
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param callback The callback
   */
  search(searchParameter: Models.GalaxyApiModelsAvailabilityActivityActivitySearchFilter, acceptLanguage: string, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityAvailabilityResult>): void;
  /**
   * @param searchParameter
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param options The optional parameters
   * @param callback The callback
   */
  search(searchParameter: Models.GalaxyApiModelsAvailabilityActivityActivitySearchFilter, acceptLanguage: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityAvailabilityResult>): void;
  search(searchParameter: Models.GalaxyApiModelsAvailabilityActivityActivitySearchFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityAvailabilityResult>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityAvailabilityResult>): Promise<Models.ActivitySearchSearchResponse> {
    return this.client.sendOperationRequest(
      {
        searchParameter,
        acceptLanguage,
        options
      },
      searchOperationSpec,
      callback) as Promise<Models.ActivitySearchSearchResponse>;
  }

  /**
   * @param search
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param [options] The optional parameters
   * @returns Promise<Models.ActivitySearchGetCalendarResponse>
   */
  getCalendar(search: Models.GalaxyApiModelsAvailabilityActivityActivityCalendarFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase): Promise<Models.ActivitySearchGetCalendarResponse>;
  /**
   * @param search
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param callback The callback
   */
  getCalendar(search: Models.GalaxyApiModelsAvailabilityActivityActivityCalendarFilter, acceptLanguage: string, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityCalendarResult>): void;
  /**
   * @param search
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param options The optional parameters
   * @param callback The callback
   */
  getCalendar(search: Models.GalaxyApiModelsAvailabilityActivityActivityCalendarFilter, acceptLanguage: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityCalendarResult>): void;
  getCalendar(search: Models.GalaxyApiModelsAvailabilityActivityActivityCalendarFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityCalendarResult>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityActivityActivityCalendarResult>): Promise<Models.ActivitySearchGetCalendarResponse> {
    return this.client.sendOperationRequest(
      {
        search,
        acceptLanguage,
        options
      },
      getCalendarOperationSpec,
      callback) as Promise<Models.ActivitySearchGetCalendarResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const searchOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/availability/activity",
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "searchParameter",
    mapper: {
      ...Mappers.GalaxyApiModelsAvailabilityActivityActivitySearchFilter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GalaxyApiModelsAvailabilityActivityActivityAvailabilityResult
    },
    default: {}
  },
  serializer
};

const getCalendarOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/availability/activity/calendar",
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "search",
    mapper: {
      ...Mappers.GalaxyApiModelsAvailabilityActivityActivityCalendarFilter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GalaxyApiModelsAvailabilityActivityActivityCalendarResult
    },
    default: {}
  },
  serializer
};
