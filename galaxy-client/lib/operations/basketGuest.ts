/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/basketGuestMappers";
import * as Parameters from "../models/parameters";
import { GalaxyApiContext } from "../galaxyApiContext";

/** Class representing a BasketGuest. */
export class BasketGuest {
  private readonly client: GalaxyApiContext;

  /**
   * Create a BasketGuest.
   * @param {GalaxyApiContext} client Reference to the service client.
   */
  constructor(client: GalaxyApiContext) {
    this.client = client;
  }

  /**
   * @summary Gets the guests list. The guest list belongs to the reservation. Each booking item in
   * the basket referrs to a
   * guest by the guest link. That mapping could be updated by using the Link request.
   * @param basketId The basket identifier.
   * @param [options] The optional parameters
   * @returns Promise<Models.BasketGuestGetResponse>
   */
  get(basketId: number, options?: msRest.RequestOptionsBase): Promise<Models.BasketGuestGetResponse>;
  /**
   * @param basketId The basket identifier.
   * @param callback The callback
   */
  get(basketId: number, callback: msRest.ServiceCallback<Models.GalaxyApiModelsBasketGuestGuest[]>): void;
  /**
   * @param basketId The basket identifier.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(basketId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsBasketGuestGuest[]>): void;
  get(basketId: number, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsBasketGuestGuest[]>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsBasketGuestGuest[]>): Promise<Models.BasketGuestGetResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.BasketGuestGetResponse>;
  }

  /**
   * @summary Adds/Updates the guest data, if Id is 0, a new guest is created.
   * @param basketId The basket identifier.
   * @param guests The value.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  add(basketId: number, guests: Models.GalaxyApiModelsBasketGuestGuest[], options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param basketId The basket identifier.
   * @param guests The value.
   * @param callback The callback
   */
  add(basketId: number, guests: Models.GalaxyApiModelsBasketGuestGuest[], callback: msRest.ServiceCallback<void>): void;
  /**
   * @param basketId The basket identifier.
   * @param guests The value.
   * @param options The optional parameters
   * @param callback The callback
   */
  add(basketId: number, guests: Models.GalaxyApiModelsBasketGuestGuest[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  add(basketId: number, guests: Models.GalaxyApiModelsBasketGuestGuest[], options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        guests,
        options
      },
      addOperationSpec,
      callback);
  }

  /**
   * @summary Link guests from guests list to a product in a basket
   * @param basketId The identifier.
   * @param links The desired links.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  link(basketId: number, links: Models.GalaxyApiModelsBasketGuestGuestLinkQuery[], options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param basketId The identifier.
   * @param links The desired links.
   * @param callback The callback
   */
  link(basketId: number, links: Models.GalaxyApiModelsBasketGuestGuestLinkQuery[], callback: msRest.ServiceCallback<void>): void;
  /**
   * @param basketId The identifier.
   * @param links The desired links.
   * @param options The optional parameters
   * @param callback The callback
   */
  link(basketId: number, links: Models.GalaxyApiModelsBasketGuestGuestLinkQuery[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  link(basketId: number, links: Models.GalaxyApiModelsBasketGuestGuestLinkQuery[], options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        links,
        options
      },
      linkOperationSpec,
      callback);
  }

  /**
   * @summary Deletes the specified guest in the specified basket.
   * @param basketId The identifier.
   * @param guestId The guest identifier.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(basketId: number, guestId: number, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param basketId The identifier.
   * @param guestId The guest identifier.
   * @param callback The callback
   */
  deleteMethod(basketId: number, guestId: number, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param basketId The identifier.
   * @param guestId The guest identifier.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(basketId: number, guestId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(basketId: number, guestId: number, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        guestId,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "v3/api/basket/guests/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalaxyApiModelsBasketGuestGuest"
            }
          }
        }
      }
    },
    default: {}
  },
  serializer
};

const addOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/basket/guests/add/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  requestBody: {
    parameterPath: "guests",
    mapper: {
      required: true,
      serializedName: "guests",
      type: {
        name: "Sequence",
        element: {
          type: {
            name: "Composite",
            className: "GalaxyApiModelsBasketGuestGuest"
          }
        }
      }
    }
  },
  responses: {
    204: {},
    default: {}
  },
  serializer
};

const linkOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/basket/guests/link/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  requestBody: {
    parameterPath: "links",
    mapper: {
      required: true,
      serializedName: "links",
      type: {
        name: "Sequence",
        element: {
          type: {
            name: "Composite",
            className: "GalaxyApiModelsBasketGuestGuestLinkQuery"
          }
        }
      }
    }
  },
  responses: {
    204: {},
    default: {}
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "v3/api/basket/guests/delete/{basketId}/{guestId}",
  urlParameters: [
    Parameters.basketId,
    Parameters.guestId
  ],
  responses: {
    204: {},
    default: {}
  },
  serializer
};
