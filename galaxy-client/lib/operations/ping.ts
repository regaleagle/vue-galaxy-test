/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/pingMappers";
import { GalaxyApiContext } from "../galaxyApiContext";

/** Class representing a Ping. */
export class Ping {
  private readonly client: GalaxyApiContext;

  /**
   * Create a Ping.
   * @param {GalaxyApiContext} client Reference to the service client.
   */
  constructor(client: GalaxyApiContext) {
    this.client = client;
  }

  /**
   * @param [options] The optional parameters
   * @returns Promise<Models.PingPingMethodResponse>
   */
  pingMethod(options?: msRest.RequestOptionsBase): Promise<Models.PingPingMethodResponse>;
  /**
   * @param callback The callback
   */
  pingMethod(callback: msRest.ServiceCallback<any>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  pingMethod(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<any>): void;
  pingMethod(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<any>, callback?: msRest.ServiceCallback<any>): Promise<Models.PingPingMethodResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      pingMethodOperationSpec,
      callback) as Promise<Models.PingPingMethodResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const pingMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "HEAD",
  path: "v3/api/ping",
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Object"
        }
      }
    },
    default: {}
  },
  serializer
};
