/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/accommodationSearchMappers";
import * as Parameters from "../models/parameters";
import { GalaxyApiContext } from "../galaxyApiContext";

/** Class representing a AccommodationSearch. */
export class AccommodationSearch {
  private readonly client: GalaxyApiContext;

  /**
   * Create a AccommodationSearch.
   * @param {GalaxyApiContext} client Reference to the service client.
   */
  constructor(client: GalaxyApiContext) {
    this.client = client;
  }

  /**
   * @summary Search availability and rates for accommodations
   * @param accommodationSearch
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccommodationSearchSearchResponse>
   */
  search(accommodationSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationSearchFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase): Promise<Models.AccommodationSearchSearchResponse>;
  /**
   * @param accommodationSearch
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param callback The callback
   */
  search(accommodationSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationSearchFilter, acceptLanguage: string, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>): void;
  /**
   * @param accommodationSearch
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param options The optional parameters
   * @param callback The callback
   */
  search(accommodationSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationSearchFilter, acceptLanguage: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>): void;
  search(accommodationSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationSearchFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>): Promise<Models.AccommodationSearchSearchResponse> {
    return this.client.sendOperationRequest(
      {
        accommodationSearch,
        acceptLanguage,
        options
      },
      searchOperationSpec,
      callback) as Promise<Models.AccommodationSearchSearchResponse>;
  }

  /**
   * @summary Retrieve an already done search
   * @param query
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccommodationSearchRetrieveResponse>
   */
  retrieve(query: Models.GalaxyApiModelsSharedQueryExistingSearchQuery, acceptLanguage: string, options?: msRest.RequestOptionsBase): Promise<Models.AccommodationSearchRetrieveResponse>;
  /**
   * @param query
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param callback The callback
   */
  retrieve(query: Models.GalaxyApiModelsSharedQueryExistingSearchQuery, acceptLanguage: string, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>): void;
  /**
   * @param query
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param options The optional parameters
   * @param callback The callback
   */
  retrieve(query: Models.GalaxyApiModelsSharedQueryExistingSearchQuery, acceptLanguage: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>): void;
  retrieve(query: Models.GalaxyApiModelsSharedQueryExistingSearchQuery, acceptLanguage: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult>): Promise<Models.AccommodationSearchRetrieveResponse> {
    return this.client.sendOperationRequest(
      {
        query,
        acceptLanguage,
        options
      },
      retrieveOperationSpec,
      callback) as Promise<Models.AccommodationSearchRetrieveResponse>;
  }

  /**
   * @summary Make a calendar of availabilities
   * @param calendarSearch
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccommodationSearchGetCalendarResponse>
   */
  getCalendar(calendarSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase): Promise<Models.AccommodationSearchGetCalendarResponse>;
  /**
   * @param calendarSearch
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param callback The callback
   */
  getCalendar(calendarSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarFilter, acceptLanguage: string, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarResult>): void;
  /**
   * @param calendarSearch
   * @param acceptLanguage The culture you wish to get data in, api/content/language can provide
   * valid cultures.
   * @param options The optional parameters
   * @param callback The callback
   */
  getCalendar(calendarSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarFilter, acceptLanguage: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarResult>): void;
  getCalendar(calendarSearch: Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarFilter, acceptLanguage: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarResult>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarResult>): Promise<Models.AccommodationSearchGetCalendarResponse> {
    return this.client.sendOperationRequest(
      {
        calendarSearch,
        acceptLanguage,
        options
      },
      getCalendarOperationSpec,
      callback) as Promise<Models.AccommodationSearchGetCalendarResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const searchOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/availability/accommodation",
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "accommodationSearch",
    mapper: {
      ...Mappers.GalaxyApiModelsAvailabilityAccommodationAccommodationSearchFilter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult
    },
    default: {}
  },
  serializer
};

const retrieveOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/availability/accommodation/get",
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "query",
    mapper: {
      ...Mappers.GalaxyApiModelsSharedQueryExistingSearchQuery,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GalaxyApiModelsAvailabilityAccommodationAccommodationAvailabilityResult
    },
    default: {}
  },
  serializer
};

const getCalendarOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/availability/accommodation/calendar",
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "calendarSearch",
    mapper: {
      ...Mappers.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarFilter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GalaxyApiModelsAvailabilityAccommodationAccommodationCalendarResult
    },
    default: {}
  },
  serializer
};
