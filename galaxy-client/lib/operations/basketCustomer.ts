/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/basketCustomerMappers";
import * as Parameters from "../models/parameters";
import { GalaxyApiContext } from "../galaxyApiContext";

/** Class representing a BasketCustomer. */
export class BasketCustomer {
  private readonly client: GalaxyApiContext;

  /**
   * Create a BasketCustomer.
   * @param {GalaxyApiContext} client Reference to the service client.
   */
  constructor(client: GalaxyApiContext) {
    this.client = client;
  }

  /**
   * @summary Gets the customer information for a basket.
   * @param basketId
   * @param [options] The optional parameters
   * @returns Promise<Models.BasketCustomerGetResponse>
   */
  get(basketId: number, options?: msRest.RequestOptionsBase): Promise<Models.BasketCustomerGetResponse>;
  /**
   * @param basketId
   * @param callback The callback
   */
  get(basketId: number, callback: msRest.ServiceCallback<Models.GalaxyApiModelsBasketCustomerCustomer>): void;
  /**
   * @param basketId
   * @param options The optional parameters
   * @param callback The callback
   */
  get(basketId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsBasketCustomerCustomer>): void;
  get(basketId: number, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsBasketCustomerCustomer>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsBasketCustomerCustomer>): Promise<Models.BasketCustomerGetResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.BasketCustomerGetResponse>;
  }

  /**
   * @summary Update the customer section of the basket.
   * @param basketId The basket identifier.
   * @param customer The customer.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  post(basketId: number, customer: Models.GalaxyApiModelsBasketCustomerCustomer, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param basketId The basket identifier.
   * @param customer The customer.
   * @param callback The callback
   */
  post(basketId: number, customer: Models.GalaxyApiModelsBasketCustomerCustomer, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param basketId The basket identifier.
   * @param customer The customer.
   * @param options The optional parameters
   * @param callback The callback
   */
  post(basketId: number, customer: Models.GalaxyApiModelsBasketCustomerCustomer, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  post(basketId: number, customer: Models.GalaxyApiModelsBasketCustomerCustomer, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        customer,
        options
      },
      postOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "v3/api/basket/customer/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GalaxyApiModelsBasketCustomerCustomer
    },
    default: {}
  },
  serializer
};

const postOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/basket/customer/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  requestBody: {
    parameterPath: "customer",
    mapper: {
      ...Mappers.GalaxyApiModelsBasketCustomerCustomer,
      required: true
    }
  },
  responses: {
    204: {},
    default: {}
  },
  serializer
};
