/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/basketSupplierMessagesMappers";
import * as Parameters from "../models/parameters";
import { GalaxyApiContext } from "../galaxyApiContext";

/** Class representing a BasketSupplierMessages. */
export class BasketSupplierMessages {
  private readonly client: GalaxyApiContext;

  /**
   * Create a BasketSupplierMessages.
   * @param {GalaxyApiContext} client Reference to the service client.
   */
  constructor(client: GalaxyApiContext) {
    this.client = client;
  }

  /**
   * @summary Get supplier message for a basket.
   * @param basketId
   * @param [options] The optional parameters
   * @returns Promise<Models.BasketSupplierMessagesGetSupplierMessageResponse>
   */
  getSupplierMessage(basketId: number, options?: msRest.RequestOptionsBase): Promise<Models.BasketSupplierMessagesGetSupplierMessageResponse>;
  /**
   * @param basketId
   * @param callback The callback
   */
  getSupplierMessage(basketId: number, callback: msRest.ServiceCallback<Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessage[]>): void;
  /**
   * @param basketId
   * @param options The optional parameters
   * @param callback The callback
   */
  getSupplierMessage(basketId: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessage[]>): void;
  getSupplierMessage(basketId: number, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessage[]>, callback?: msRest.ServiceCallback<Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessage[]>): Promise<Models.BasketSupplierMessagesGetSupplierMessageResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        options
      },
      getSupplierMessageOperationSpec,
      callback) as Promise<Models.BasketSupplierMessagesGetSupplierMessageResponse>;
  }

  /**
   * @summary Set messages to supplier
   * @param basketId
   * @param messages
   * @param [options] The optional parameters
   * @returns Promise<Models.BasketSupplierMessagesSetSupplierMessageResponse>
   */
  setSupplierMessage(basketId: number, messages: Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessagePost[], options?: msRest.RequestOptionsBase): Promise<Models.BasketSupplierMessagesSetSupplierMessageResponse>;
  /**
   * @param basketId
   * @param messages
   * @param callback The callback
   */
  setSupplierMessage(basketId: number, messages: Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessagePost[], callback: msRest.ServiceCallback<boolean>): void;
  /**
   * @param basketId
   * @param messages
   * @param options The optional parameters
   * @param callback The callback
   */
  setSupplierMessage(basketId: number, messages: Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessagePost[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;
  setSupplierMessage(basketId: number, messages: Models.GalaxyApiModelsBasketSupplierMessagesSupplierMessagePost[], options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>, callback?: msRest.ServiceCallback<boolean>): Promise<Models.BasketSupplierMessagesSetSupplierMessageResponse> {
    return this.client.sendOperationRequest(
      {
        basketId,
        messages,
        options
      },
      setSupplierMessageOperationSpec,
      callback) as Promise<Models.BasketSupplierMessagesSetSupplierMessageResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getSupplierMessageOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "v3/api/basket/suppliermessage/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalaxyApiModelsBasketSupplierMessagesSupplierMessage"
            }
          }
        }
      }
    },
    default: {}
  },
  serializer
};

const setSupplierMessageOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "v3/api/basket/suppliermessage/{basketId}",
  urlParameters: [
    Parameters.basketId
  ],
  requestBody: {
    parameterPath: "messages",
    mapper: {
      required: true,
      serializedName: "messages",
      type: {
        name: "Sequence",
        element: {
          type: {
            name: "Composite",
            className: "GalaxyApiModelsBasketSupplierMessagesSupplierMessagePost"
          }
        }
      }
    }
  },
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Boolean"
        }
      }
    },
    default: {}
  },
  serializer
};
